<?php

namespace Proxies\__CG__\ElectroAtoui\CoreBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Product extends \ElectroAtoui\CoreBundle\Entity\Product implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'ElectroAtoui\\CoreBundle\\Entity\\Product' . "\0" . 'id', '' . "\0" . 'ElectroAtoui\\CoreBundle\\Entity\\Product' . "\0" . 'images', '' . "\0" . 'ElectroAtoui\\CoreBundle\\Entity\\Product' . "\0" . 'categories', '' . "\0" . 'ElectroAtoui\\CoreBundle\\Entity\\Product' . "\0" . 'name', '' . "\0" . 'ElectroAtoui\\CoreBundle\\Entity\\Product' . "\0" . 'slug', '' . "\0" . 'ElectroAtoui\\CoreBundle\\Entity\\Product' . "\0" . 'reference', '' . "\0" . 'ElectroAtoui\\CoreBundle\\Entity\\Product' . "\0" . 'description', '' . "\0" . 'ElectroAtoui\\CoreBundle\\Entity\\Product' . "\0" . 'price', '' . "\0" . 'ElectroAtoui\\CoreBundle\\Entity\\Product' . "\0" . 'sale_price', '' . "\0" . 'ElectroAtoui\\CoreBundle\\Entity\\Product' . "\0" . 'for_sale', '' . "\0" . 'ElectroAtoui\\CoreBundle\\Entity\\Product' . "\0" . 'is_active', '' . "\0" . 'ElectroAtoui\\CoreBundle\\Entity\\Product' . "\0" . 'quantity');
        }

        return array('__isInitialized__', '' . "\0" . 'ElectroAtoui\\CoreBundle\\Entity\\Product' . "\0" . 'id', '' . "\0" . 'ElectroAtoui\\CoreBundle\\Entity\\Product' . "\0" . 'images', '' . "\0" . 'ElectroAtoui\\CoreBundle\\Entity\\Product' . "\0" . 'categories', '' . "\0" . 'ElectroAtoui\\CoreBundle\\Entity\\Product' . "\0" . 'name', '' . "\0" . 'ElectroAtoui\\CoreBundle\\Entity\\Product' . "\0" . 'slug', '' . "\0" . 'ElectroAtoui\\CoreBundle\\Entity\\Product' . "\0" . 'reference', '' . "\0" . 'ElectroAtoui\\CoreBundle\\Entity\\Product' . "\0" . 'description', '' . "\0" . 'ElectroAtoui\\CoreBundle\\Entity\\Product' . "\0" . 'price', '' . "\0" . 'ElectroAtoui\\CoreBundle\\Entity\\Product' . "\0" . 'sale_price', '' . "\0" . 'ElectroAtoui\\CoreBundle\\Entity\\Product' . "\0" . 'for_sale', '' . "\0" . 'ElectroAtoui\\CoreBundle\\Entity\\Product' . "\0" . 'is_active', '' . "\0" . 'ElectroAtoui\\CoreBundle\\Entity\\Product' . "\0" . 'quantity');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Product $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setReference($reference)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReference', array($reference));

        return parent::setReference($reference);
    }

    /**
     * {@inheritDoc}
     */
    public function getReference()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReference', array());

        return parent::getReference();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrice($price)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrice', array($price));

        return parent::setPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function setSlug($slug)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSlug', array($slug));

        return parent::setSlug($slug);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlug()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlug', array());

        return parent::getSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', array());

        return parent::getPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setSalePrice($sale_price)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSalePrice', array($sale_price));

        return parent::setSalePrice($sale_price);
    }

    /**
     * {@inheritDoc}
     */
    public function getSalePrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalePrice', array());

        return parent::getSalePrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setForSale($for_sale)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setForSale', array($for_sale));

        return parent::setForSale($for_sale);
    }

    /**
     * {@inheritDoc}
     */
    public function getForSale()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getForSale', array());

        return parent::getForSale();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsActive($is_active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsActive', array($is_active));

        return parent::setIsActive($is_active);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsActive', array());

        return parent::getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuantity($quantity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuantity', array($quantity));

        return parent::setQuantity($quantity);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuantity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuantity', array());

        return parent::getQuantity();
    }

    /**
     * {@inheritDoc}
     */
    public function getImages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImages', array());

        return parent::getImages();
    }

    /**
     * {@inheritDoc}
     */
    public function addImage(\ElectroAtoui\CoreBundle\Entity\Image $image)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addImage', array($image));

        return parent::addImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function removeImage(\ElectroAtoui\CoreBundle\Entity\Image $image)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeImage', array($image));

        return parent::removeImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategories()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategories', array());

        return parent::getCategories();
    }

    /**
     * {@inheritDoc}
     */
    public function addCategory(\ElectroAtoui\CoreBundle\Entity\Category $category)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCategory', array($category));

        return parent::addCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCategory(\ElectroAtoui\CoreBundle\Entity\Category $category)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCategory', array($category));

        return parent::removeCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function isAvailableToBuy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAvailableToBuy', array());

        return parent::isAvailableToBuy();
    }

    /**
     * {@inheritDoc}
     */
    public function getAbsoluteUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAbsoluteUrl', array());

        return parent::getAbsoluteUrl();
    }

}
